from Crypto.Util.number import inverse, long_to_bytes 
n1 = 264057768287532610924734156161085846111271356228103155462076871372364307056741048144764594645062879781647063846971890031256799636109911752078600428566502298518944558664381187
e1 = 65537
ct = 175347248748800717331910762241898102719683222504200516534883687111045877096093372005991552193144558951747833811929393668749668731738201985792026669764642235225240342271148171
p1 = 11587518025855592759726630124584244020238845252808598255278658263482784394605886754984976163579618331619323699778956049111427022474635415206131197278729813
q1 = 22788121468146346999
phi1 = (p1 - 1)*(q1 - 1) 
d1 = inverse(e1, phi1) 
print(long_to_bytes(pow(ct, d1, n1)))